version: "3.1"

networks:
 kong-net:
  driver: bridge

volumes:
  kong-database-vol:
    driver: local
  kong-vol:
    driver: local

services:

  kong-database:
    image: postgres:9.6
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      # - ${PWD}/postgres-data:/var/lib/postgresql/data
      - kong-database-vol:/var/lib/postgresql/data

  kong-migration:
    # image: kong:latest
    image: apirath/kong-appgw:v1.0.2-alpine
    command: "kong migrations up"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_PG_HOST: kong-database
    links:
      - kong-database
    depends_on:
      - kong-database

  kong:
    # image: kong:latest
    image: apirath/kong-appgw:v1.0.2-alpine
    restart: always
    networks:
      - kong-net
    environment:
      KONG_PG_HOST: "kong-database"
#      KONG_PROXY_LISTEN: '0.0.0.0:8000, 0.0.0.0:8443 ssl'
      KONG_PROXY_LISTEN: '0.0.0.0:8000, 0.0.0.0:8443 ssl'
#      KONG_ADMIN_LISTEN: '0.0.0.0:8001, 0.0.0.0:8444 ssl'
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      # KONG_NGINX_HTTP_INCLUDE: "/usr/local/kong/nginx-include.conf"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
    depends_on:
      - kong-migration
      - kong-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8444:8444"
      - "8001:8001"
      - "443:8443"
      - "8000:8000"
      - "80:80"
    volumes:
      # - ${PWD}/kong-data:/usr/local/kong
      - kong-vol:/usr/local/kong
      # - ${PWD}/nginx-include.conf:/usr/local/kong/nginx-include.conf:ro

  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://kong@kong-database:5432/konga_db"
    networks:
      - kong-net
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database

  konga:
    image: pantsel/konga:next
    restart: always
    networks:
        - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"
